<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/aop 
  		http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
  		http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd 
        http://www.springframework.org/schema/cache 
        http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
        http://www.springframework.org/schema/util 
        http://www.springframework.org/schema/util/spring-util-4.3.xsd
        ">
        
	<bean id="defaultDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">  
         <!-- 数据库基本信息配置 -->
         <property name="url" value="${mysql.url}" />  
         <property name="username" value="${mysql.username}" />  
         <property name="password" value="${mysql.password}" />  
         <property name="driverClassName" value="${mysql.driverClassName}" />  
         
         <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->  
         <property name="filters" value="${mysql.druid.filters}" />  
         
   		 <!-- 最大并发连接数 -->
         <property name="maxActive" value="${mysql.druid.maxActive}" />
         
         <!-- 初始化连接数量 -->
         <property name="initialSize" value="${mysql.druid.initialSize}" />
         
         <!-- 配置获取连接等待超时的时间 -->
         <property name="maxWait" value="${mysql.druid.maxWait}" />
         
         <!-- 最小空闲连接数 -->
         <property name="minIdle" value="${mysql.druid.minIdle}" />  
         
   		 <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
         <property name="timeBetweenEvictionRunsMillis" value="${mysql.druid.timeBetweenEvictionRunsMillis}" />
         
         <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
         <property name="minEvictableIdleTimeMillis" value="${mysql.druid.minEvictableIdleTimeMillis}" />  
         <property name="validationQuery" value="${mysql.druid.validationQuery}" />  
         <property name="testWhileIdle" value="${mysql.druid.testWhileIdle}" />  
         <property name="testOnBorrow" value="${mysql.druid.testOnBorrow}" />  
         <property name="testOnReturn" value="${mysql.druid.testOnReturn}" />  
         <property name="maxOpenPreparedStatements" value="${mysql.druid.maxOpenPreparedStatements}" />
         
         <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->  
    	<property name="poolPreparedStatements" value="${mysql.druid.poolPreparedStatements}" />  
    	<property name="maxPoolPreparedStatementPerConnectionSize" value="${mysql.druid.maxPoolPreparedStatementPerConnectionSize}" /> 
         
         <!-- 打开removeAbandoned功能 -->
         <property name="removeAbandoned" value="${mysql.druid.removeAbandoned}" />
         
         <!-- 1800秒，也就是30分钟 -->
         <property name="removeAbandonedTimeout" value="${mysql.druid.removeAbandonedTimeout}" />
         
         <!-- 关闭abanded连接时输出错误日志 -->   
         <property name="logAbandoned" value="${mysql.druid.logAbandoned}" />
         
	</bean> 
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="defaultDataSource" />
	</bean>
	
	<tx:annotation-driven transaction-manager="txManager" />
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="do*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* com.paier.word.*.service..*.*(..))"/>
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="txAdvice"/>
    </aop:config>
	
	<!-- MyBatis配置 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="defaultDataSource" />																							  		
		<property name="typeAliasesPackage" value="com.paier.word.*.entity" />
		<property name="mapperLocations" value="classpath*:*/*/*Mapper.xml" />
		<property name="configLocation" value="classpath:spring/spring-mybatis.xml" />
		<property name="plugins">
		    <array>
		      <bean class="com.github.pagehelper.PageHelper">
		        <property name="properties">
		          <value>dialect=mysql</value>
		        </property>
		      </bean>
		    </array>
		  </property>
	</bean>

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>

	<!-- 扫描basePackage下所有以@MyBatisRepository标识的 接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.paier.word.*.dao" />
		<property name="annotationClass" value="com.paier.word.annoatation.MyBatisDao" />
	</bean>
	
</beans>
