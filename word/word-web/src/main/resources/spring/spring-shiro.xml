<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.3.xsd"
        default-lazy-init="true">

    <!--安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- 设置自定义Realm -->
        <property name="realm" ref="shiroAdminRealm"/>
        <!-- 将缓存管理器，交给安全管理器 -->
        <property name="cacheManager" ref="shiroEhcacheManager"/>
        <!-- 配置session管理器 -->
        <!-- <property name="sessionManager" ref="sessionManager" /> -->
    </bean>

    <!-- 项目自定义的Realm -->
    <bean id="shiroAdminRealm" class="com.treasureFinal.core.util.shiro.ShiroAdminRealm"/>

    <!-- Shiro Filter -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="${admin.managerPath}/login"/>
        <property name="successUrl" value="${admin.managerPath}/home"/>
        <property name="unauthorizedUrl" value="${admin.managerPath}/login"/>
        <property name="filterChainDefinitions">
            <value>
                ${admin.managerPath}/login = anon
                ${admin.managerPath}/doLogin = anon
                /version/** = anon
                /common/** = anon
                /user/** = authc
                /role/edit/* = perms[role:edit]
                /role/save = perms[role:edit]
                /role/list = perms[role:view]
                <!--/** = authc-->
                <!--/static/** = anon &lt;!&ndash; 不需要认证 &ndash;&gt;-->
                <!--/login = anon-->
                <!--/captcha = anon-->
                <!--/** = authc &lt;!&ndash; 需要认证 &ndash;&gt;-->
            </value>
        </property>
    </bean>

    <!-- 用户授权信息Cache, 采用EhCache -->
    <bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
    </bean>

    <!-- 配置sessionDAO -->
    <!-- <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO" />
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="sessionDAO" />
    </bean> -->

    <!-- 在方法中 注入 securityManager,进行代理控制 -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
                  value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- AOP式方法级权限检查 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor"/>

    <!-- 启用shrio授权注解拦截方式 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

</beans>
